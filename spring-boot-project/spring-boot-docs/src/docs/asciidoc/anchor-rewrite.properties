#
# Migrations
#
#---------------------------------------------------




#
# Spring Boot <= 2.4 Migrations
#
#---------------------------------------------------



# (index.adoc)
# 1 = Spring Boot Reference Documentation
spring-boot-reference-documentation=\
index



# (legal.adoc)
# 1 = Legal
legal=\
legal



# (documentation.adoc)
# 1 = Spring Boot Documentation
boot-documentation=\
documentation

# 2 == About the Documentation
boot-documentation-about=\
documentation.about

# 2 == Getting Help
boot-documentation-getting-help=\
documentation.getting-help

# 2 == Upgrading From an Earlier Version
boot-documentation-upgrading=\
documentation.upgrading

# 2 == First Steps
boot-documentation-first-steps=\
documentation.first-steps

# 2 == Working with Spring Boot
boot-documentation-workingwith=\
documentation.using

# 2 == Learning About Spring Boot Features
boot-documentation-learning=\
documentation.features

# 2 == Moving to Production
boot-documentation-production=\
documentation.actuator

# 2 == Advanced Topics
boot-documentation-advanced=\
documentation.advanced



# (getting-started.adoc)
# 1 = Getting Started
getting-started=\
getting-started

# 2 == Introducing Spring Boot
getting-started-introducing-spring-boot=\
getting-started.introducing-spring-boot

# 2 == System Requirements
getting-started-system-requirements=\
getting-started.system-requirements

# 3 === Servlet Containers
getting-started-system-requirements-servlet-containers=\
getting-started.system-requirements.servlet-containers

# 2 == Installing Spring Boot
getting-started-installing-spring-boot=\
getting-started.installing

# 3 === Installation Instructions for the Java Developer
getting-started-installation-instructions-for-java=\
getting-started.installing.java

# 4 ==== Maven Installation
getting-started-maven-installation=\
getting-started.installing.java.maven

# 4 ==== Gradle Installation
getting-started-gradle-installation=\
getting-started.installing.java.gradle

# 3 === Installing the Spring Boot CLI
getting-started-installing-the-cli=\
getting-started.installing.cli

# 4 ==== Manual Installation
getting-started-manual-cli-installation=\
getting-started.installing.cli.manual-installation

# 4 ==== Installation with SDKMAN!
getting-started-sdkman-cli-installation=\
getting-started.installing.cli.sdkman

# 4 ==== OSX Homebrew Installation
getting-started-homebrew-cli-installation=\
getting-started.installing.cli.homebrew

# 4 ==== MacPorts Installation
getting-started-macports-cli-installation=\
getting-started.installing.cli.macports

# 4 ==== Command-line Completion
getting-started-cli-command-line-completion=\
getting-started.installing.cli.completion

# 4 ==== Windows Scoop Installation
getting-started-scoop-cli-installation=\
getting-started.installing.cli.scoop

# 4 ==== Quick-start Spring CLI Example
getting-started-cli-example=\
getting-started.installing.cli.quick-start

# 3 === Upgrading from an Earlier Version of Spring Boot
getting-started-upgrading-from-an-earlier-version=\
getting-started.installing.upgrading

# 2 == Developing Your First Spring Boot Application
getting-started-first-application=\
getting-started.first-application

# 3 === Creating the POM
getting-started-first-application-pom=\
getting-started.first-application.pom

# 3 === Adding Classpath Dependencies
getting-started-first-application-dependencies=\
getting-started.first-application.dependencies

# 3 === Writing the Code
getting-started-first-application-code=\
getting-started.first-application.code

# 4 ==== The @RestController and @RequestMapping Annotations
getting-started-first-application-annotations=\
getting-started.first-application.code.mvc-annotations

# 4 ==== The @EnableAutoConfiguration Annotation
getting-started-first-application-auto-configuration=\
getting-started.first-application.code.enable-auto-configuration

# 4 ==== The "`main`" Method
getting-started-first-application-main-method=\
getting-started.first-application.code.main-method

# 3 === Running the Example
getting-started-first-application-run=\
getting-started.first-application.run

# 3 === Creating an Executable Jar
getting-started-first-application-executable-jar=\
getting-started.first-application.executable-jar

# 2 == What to Read Next
getting-started-whats-next=\
getting-started.whats-next



# (using.adoc)
# 1 = Using Spring Boot
using-boot=\
using

# 2 == Build Systems
using-boot-build-systems=\
using.build-systems

# 3 === Dependency Management
using-boot-dependency-management=\
using.build-systems.dependency-management

# 3 === Maven
using-boot-maven=\
using.build-systems.maven

# 3 === Gradle
using-boot-gradle=\
using.build-systems.gradle

# 3 ===  Ant
using-boot-ant=\
using.build-systems.ant

# 3 === Starters
using-boot-starter=\
using.build-systems.starters

# 2 == Structuring Your Code
using-boot-structuring-your-code=\
using.structuring-your-code

# 3 === Using the "`default`" Package
using-boot-using-the-default-package=\
using.structuring-your-code.using-the-default-package

# 3 === Locating the Main Application Class
using-boot-locating-the-main-class=\
using.structuring-your-code.locating-the-main-class

# 2 == Configuration Classes
using-boot-configuration-classes=\
using.configuration-classes

# 3 === Importing Additional Configuration Classes
using-boot-importing-configuration=\
using.configuration-classes.importing-additional-configuration

# 3 === Importing XML Configuration
using-boot-importing-xml-configuration=\
using.configuration-classes.importing-xml-configuration

# 2 == Auto-configuration
using-boot-auto-configuration=\
using.auto-configuration

# 3 === Gradually Replacing Auto-configuration
using-boot-replacing-auto-configuration=\
using.auto-configuration.replacing

# 3 === Disabling Specific Auto-configuration Classes
using-boot-disabling-specific-auto-configuration=\
using.auto-configuration.disabling-specific

# 2 == Spring Beans and Dependency Injection
using-boot-spring-beans-and-dependency-injection=\
using.spring-beans-and-dependency-injection

# 2 == Using the @SpringBootApplication Annotation
using-boot-using-springbootapplication-annotation=\
using.using-the-springbootapplication-annotation

# 2 == Running Your Application
using-boot-running-your-application=\
using.running-your-application

# 3 === Running from an IDE
using-boot-running-from-an-ide=\
using.running-your-application.from-an-ide

# 3 === Running as a Packaged Application
using-boot-running-as-a-packaged-application=\
using.running-your-application.as-a-packaged-application

# 3 === Using the Maven Plugin
using-boot-running-with-the-maven-plugin=\
using.running-your-application.with-the-maven-plugin

# 3 === Using the Gradle Plugin
using-boot-running-with-the-gradle-plugin=\
using.running-your-application.with-the-gradle-plugin

# 3 === Hot Swapping
using-boot-hot-swapping=\
using.running-your-application.hot-swapping

# 2 == Developer Tools
using-boot-devtools=\
using.devtools

# 3 === Property Defaults
using-boot-devtools-property-defaults=\
using.devtools.property-defaults

# 3 === Automatic Restart
using-boot-devtools-restart=\
using.devtools.restart

# 4 ==== Logging changes in condition evaluation
using-boot-devtools-restart-logging-condition-delta=\
using.devtools.restart.logging-condition-delta

# 4 ==== Excluding Resources
using-boot-devtools-restart-exclude=\
using.devtools.restart.excluding-resources

# 4 ==== Watching Additional Paths
using-boot-devtools-restart-additional-paths=\
using.devtools.restart.watching-additional-paths

# 4 ==== Disabling Restart
using-boot-devtools-restart-disable=\
using.devtools.restart.disable

# 4 ==== Using a Trigger File
using-boot-devtools-restart-triggerfile=\
using.devtools.restart.triggerfile

# 4 ==== Customizing the Restart Classloader
using-boot-devtools-customizing-classload=\
using.devtools.restart.customizing-the-classload

# 4 ==== Known Limitations
using-boot-devtools-known-restart-limitations=\
using.devtools.restart.limitations

# 3 === LiveReload
using-boot-devtools-livereload=\
using.devtools.livereload

# 3 === Global Settings
using-boot-devtools-globalsettings=\
using.devtools.globalsettings

# 4 ==== Configuring File System Watcher
configuring-file-system-watcher=\
using.devtools.globalsettings.configuring-file-system-watcher

# 3 === Remote Applications
using-boot-devtools-remote=\
using.devtools.remote-applications

# 4 ==== Running the Remote Client Application
running-remote-client-application=\
using.devtools.remote-applications.client

# 4 ==== Remote Update
using-boot-devtools-remote-update=\
using.devtools.remote-applications.update

# 2 == Packaging Your Application for Production
using-boot-packaging-for-production=\
using.packaging-for-production

# 2 == What to Read Next
using-boot-whats-next=\
using.whats-next



# (features.adoc)
# 1 = Spring Boot Features
boot-features=\
features

# 2 == SpringApplication
boot-features-spring-application=\
features.spring-application

# 3 === Startup Failure
boot-features-startup-failure=\
features.spring-application.startup-failure

# 3 === Lazy Initialization
boot-features-lazy-initialization=\
features.spring-application.lazy-initialization

# 3 === Customizing the Banner
boot-features-banner=\
features.spring-application.banner

# 3 === Customizing SpringApplication
boot-features-customizing-spring-application=\
features.spring-application.customizing-spring-application

# 3 === Fluent Builder API
boot-features-fluent-builder-api=\
features.spring-application.fluent-builder-api

# 3 === Application Availability
boot-features-application-availability=\
features.spring-application.application-availability

# 4 ==== Liveness State
boot-features-application-availability-liveness-state=\
features.spring-application.application-availability.liveness

# 4 ==== Readiness State
boot-features-application-availability-readiness-state=\
features.spring-application.application-availability.readiness

# 4 ==== Managing the Application Availability State
boot-features-application-availability-managing=\
features.spring-application.application-availability.managing

# 3 === Application Events and Listeners
boot-features-application-events-and-listeners=\
features.spring-application.application-events-and-listeners

# 3 === Web Environment
boot-features-web-environment=\
features.spring-application.web-environment

# 3 === Accessing Application Arguments
boot-features-application-arguments=\
features.spring-application.application-arguments

# 3 === Using the ApplicationRunner or CommandLineRunner
boot-features-command-line-runner=\
features.spring-application.command-line-runner

# 3 === Application Exit
boot-features-application-exit=\
features.spring-application.application-exit

# 3 === Admin Features
boot-features-application-admin=\
features.spring-application.admin

# 3 === Application Startup tracking
boot-features-application-startup-tracking=\
features.spring-application.startup-tracking

# 2 == Externalized Configuration
boot-features-external-config=\
features.external-config

# 3 === Accessing Command Line Properties
boot-features-external-config-command-line-args=\
features.external-config.command-line-args

# 3 === JSON Application Properties
boot-features-external-config-application-json=\
features.external-config.application-json

# 3 === External Application Properties
boot-features-external-config-files=\
features.external-config.files

boot-features-external-config-application-property-files=\
features.external-config.files

# 4 ==== Optional Locations
boot-features-external-config-optional-prefix=\
features.external-config.files.optional-prefix

# 4 ==== Wildcard Locations
boot-features-external-config-files-wildcards=\
features.external-config.files.wildcard-locations

# 4 ==== Profile Specific Files
boot-features-external-config-files-profile-specific=\
features.external-config.files.profile-specific

# 4 ==== Importing Additional Data
boot-features-external-config-files-importing=\
features.external-config.files.importing

# 4 ==== Importing Extensionless Files
boot-features-external-config-files-importing-extensionless=\
features.external-config.file.importing-extensionless

# 4 ==== Using Configuration Trees
boot-features-external-config-files-configtree=\
features.external-config.files.configtree

# 4 ==== Property Placeholders
boot-features-external-config-placeholders-in-properties=\
features.external-config.files.property-placeholders

# 4 ==== Working with Multi-Document Files
boot-features-external-config-files-multi-document=\
features.external-config.files.multi-document

# 4 ==== Activation Properties
boot-features-external-config-file-activation-properties=\
features.external-config.files.activation-properties

# 3 === Encrypting Properties
boot-features-encrypting-properties=\
features.external-config.encrypting

# 3 === Working with YAML
boot-features-external-config-yaml=\
features.external-config.yaml

# 4 ==== Mapping YAML to Properties
boot-features-external-config-yaml-to-properties=\
features.external-config.yaml.mapping-to-properties

# 4 ==== Directly Loading YAML
boot-features-external-config-exposing-yaml-to-spring=\
features.external-config.yaml.directly-loading

boot-features-external-config-loading-yaml=\
features.external-config.yaml.directly-loading

# 3 === Configuring Random Values
boot-features-external-config-random-values=\
features.external-config.random-values

# 3 === Configuring System Environment Properties
boot-features-external-config-system-environment=\
features.external-config.system-environment

# 3 === Type-safe Configuration Properties
boot-features-external-config-typesafe-configuration-properties=\
features.external-config.typesafe-configuration-properties

# 4 ==== JavaBean properties binding
boot-features-external-config-java-bean-binding=\
features.external-config.typesafe-configuration-properties.java-bean-binding

# 4 ==== Constructor binding
boot-features-external-config-constructor-binding=\
features.external-config.typesafe-configuration-properties.constructor-binding

# 4 ==== Enabling @ConfigurationProperties-annotated types
boot-features-external-config-enabling=\
features.external-config.typesafe-configuration-properties.enabling-annotated-types

# 4 ==== Using @ConfigurationProperties-annotated types
boot-features-external-config-using=\
features.external-config.typesafe-configuration-properties.using-annotated-types

# 4 ==== Third-party Configuration
boot-features-external-config-3rd-party-configuration=\
features.external-config.typesafe-configuration-properties.third-party-configuration

# 4 ==== Relaxed Binding
boot-features-external-config-relaxed-binding=\
features.external-config.typesafe-configuration-properties.relaxed-binding

# 5 ===== Binding Maps
boot-features-external-config-relaxed-binding-maps=\
features.external-config.typesafe-configuration-properties.relaxed-binding.maps

# 5 ===== Binding from Environment Variables
boot-features-external-config-relaxed-binding-from-environment-variables=\
features.external-config.typesafe-configuration-properties.relaxed-binding.environment-variables

# 4 ==== Merging Complex Types
boot-features-external-config-complex-type-merge=\
features.external-config.typesafe-configuration-properties.merging-complex-types

# 4 ==== Properties Conversion
boot-features-external-config-conversion=\
features.external-config.typesafe-configuration-properties.conversion

# 5 ===== Converting Durations
boot-features-external-config-conversion-duration=\
features.external-config.typesafe-configuration-properties.conversion.durations

# 5 ===== Converting periods
boot-features-external-config-conversion-period=\
features.external-config.typesafe-configuration-properties.conversion.periods

# 5 ===== Converting Data Sizes
boot-features-external-config-conversion-datasize=\
features.external-config.typesafe-configuration-properties.conversion.data-sizes

# 4 ==== @ConfigurationProperties Validation
boot-features-external-config-validation=\
features.external-config.typesafe-configuration-properties.validation

# 4 ==== @ConfigurationProperties vs. @Value
boot-features-external-config-vs-value=\
features.external-config.typesafe-configuration-properties.vs-value-annotation

# 2 == Profiles
boot-features-profiles=\
features.profiles

# 3 === Adding Active Profiles
boot-features-adding-active-profiles=\
features.profiles.adding-active-profiles

# 3 === Profile Groups
boot-features-profiles-groups=\
features.profiles.groups

# 3 === Programmatically Setting Profiles
boot-features-programmatically-setting-profiles=\
features.profiles.programmatically-setting-profiles

# 3 === Profile-specific Configuration Files
boot-features-profile-specific-configuration=\
features.profiles.profile-specific-configuration-files

# 2 == Logging
boot-features-logging=\
features.logging

# 3 === Log Format
boot-features-logging-format=\
features.logging.log-format

# 3 === Console Output
boot-features-logging-console-output=\
features.logging.console-output

# 4 ==== Color-coded Output
boot-features-logging-color-coded-output=\
features.logging.console-output.color-coded

# 3 === File Output
boot-features-logging-file-output=\
features.logging.file-output

# 3 === File Rotation
boot-features-logging-file-rotation=\
features.logging.file-rotation

# 3 === Log Levels
boot-features-custom-log-levels=\
features.logging.log-levels

# 3 === Log Groups
boot-features-custom-log-groups=\
features.logging.log-groups

# 3 === Using a Log Shutdown Hook
boot-features-log-shutdown-hook=\
features.logging.shutdown-hook

# 3 === Custom Log Configuration
boot-features-custom-log-configuration=\
features.logging.custom-log-configuration

# 3 === Logback Extensions
boot-features-logback-extensions=\
features.logging.logback-extensions

# 4 ==== Profile-specific Configuration
boot-features-logback-extensions-profile-specific=\
features.logging.logback-extensions.profile-specific

# 4 ==== Environment Properties
boot-features-logback-environment-properties=\
features.logging.logback-extensions.environment-properties

# 2 == Internationalization
boot-features-internationalization=\
features.internationalization

# 2 == JSON
boot-features-json=\
features.json

# 3 === Jackson
boot-features-json-jackson=\
features.json.jackson

# 3 === Gson
boot-features-json-gson=\
features.json.gson

# 3 === JSON-B
boot-features-json-json-b=\
features.json.json-b

# 2 == Developing Web Applications
boot-features-developing-web-applications=\
features.developing-web-applications

# 3 === The "`Spring Web MVC Framework`"
boot-features-spring-mvc=\
features.developing-web-applications.spring-mvc

# 4 ==== Spring MVC Auto-configuration
boot-features-spring-mvc-auto-configuration=\
features.developing-web-applications.spring-mvc.auto-configuration

# 4 ==== HttpMessageConverters
boot-features-spring-mvc-message-converters=\
features.developing-web-applications.spring-mvc.message-converters

# 4 ==== Custom JSON Serializers and Deserializers
boot-features-json-components=\
features.developing-web-applications.spring-mvc.json

# 4 ==== MessageCodesResolver
boot-features-spring-message-codes=\
features.developing-web-applications.spring-mvc.message-codes

# 4 ==== Static Content
boot-features-spring-mvc-static-content=\
features.developing-web-applications.spring-mvc.static-content

# 4 ==== Welcome Page
boot-features-spring-mvc-welcome-page=\
features.developing-web-applications.spring-mvc.welcome-page

# 4 ==== Path Matching and Content Negotiation
boot-features-spring-mvc-pathmatch=\
features.developing-web-applications.spring-mvc.content-negotiation

# 4 ==== ConfigurableWebBindingInitializer
boot-features-spring-mvc-web-binding-initializer=\
features.developing-web-applications.spring-mvc.binding-initializer

# 4 ==== Template Engines
boot-features-spring-mvc-template-engines=\
features.developing-web-applications.spring-mvc.template-engines

# 4 ==== Error Handling
boot-features-error-handling=\
features.developing-web-applications.spring-mvc.error-handling

# 5 ===== Custom Error Pages
boot-features-error-handling-custom-error-pages=\
features.developing-web-applications.spring-mvc.error-handling.error-pages

# 5 ===== Mapping Error Pages outside of Spring MVC
boot-features-error-handling-mapping-error-pages-without-mvc=\
features.developing-web-applications.spring-mvc.error-handling.error-pages-without-spring-mvc

# 5 ===== Error handling in a war deployment
boot-features-error-handling-war-deployment=\
features.developing-web-applications.spring-mvc.error-handling.in-a-war-deployment

# 4 ==== Spring HATEOAS
boot-features-spring-hateoas=\
features.developing-web-applications.spring-mvc.spring-hateoas

# 4 ==== CORS Support
boot-features-cors=\
features.developing-web-applications.spring-mvc.cors

# 3 === The "`Spring WebFlux Framework`"
boot-features-webflux=\
features.developing-web-applications.spring-webflux

# 4 ==== Spring WebFlux Auto-configuration
boot-features-webflux-auto-configuration=\
features.developing-web-applications.spring-webflux.auto-configuration

# 4 ==== HTTP Codecs with HttpMessageReaders and HttpMessageWriters
boot-features-webflux-httpcodecs=\
features.developing-web-applications.spring-webflux.httpcodecs

# 4 ==== Static Content
boot-features-webflux-static-content=\
features.developing-web-applications.spring-webflux.static-content

# 4 ==== Welcome Page
boot-features-webflux-welcome-page=\
features.developing-web-applications.spring-webflux.welcome-page

# 4 ==== Template Engines
boot-features-webflux-template-engines=\
features.developing-web-applications.spring-webflux.template-engines

# 4 ==== Error Handling
boot-features-webflux-error-handling=\
features.developing-web-applications.spring-webflux.error-handling

# 5 ===== Custom Error Pages
boot-features-webflux-error-handling-custom-error-pages=\
features.developing-web-applications.spring-webflux.error-handling.error-pages

# 4 ==== Web Filters
boot-features-webflux-web-filters=\
features.developing-web-applications.spring-webflux.web-filters

# 3 === JAX-RS and Jersey
boot-features-jersey=\
features.developing-web-applications.jersey

# 3 === Embedded Servlet Container Support
boot-features-embedded-container=\
features.developing-web-applications.embedded-container

# 4 ==== Servlets, Filters, and listeners
boot-features-embedded-container-servlets-filters-listeners=\
features.developing-web-applications.embedded-container.servlets-filters-listeners

# 5 ===== Registering Servlets, Filters, and Listeners as Spring Beans
boot-features-embedded-container-servlets-filters-listeners-beans=\
features.developing-web-applications.embedded-container.servlets-filters-listeners.beans

# 4 ==== Servlet Context Initialization
boot-features-embedded-container-context-initializer=\
features.developing-web-applications.embedded-container.context-initializer

# 5 ===== Scanning for Servlets, Filters, and listeners
boot-features-embedded-container-servlets-filters-listeners-scanning=\
features.developing-web-applications.embedded-container.context-initializer.scanning

# 4 ==== The ServletWebServerApplicationContext
boot-features-embedded-container-application-context=\
features.developing-web-applications.embedded-container.application-context

# 4 ==== Customizing Embedded Servlet Containers
boot-features-customizing-embedded-containers=\
features.developing-web-applications.embedded-container.customizing

# 5 ===== Programmatic Customization
boot-features-programmatic-embedded-container-customization=\
features.developing-web-applications.embedded-container.customizing.programmatic

# 5 ===== Customizing ConfigurableServletWebServerFactory Directly
boot-features-customizing-configurableservletwebserverfactory-directly=\
features.developing-web-applications.embedded-container.customizing.direct

# 4 ==== JSP Limitations
boot-features-jsp-limitations=\
features.developing-web-applications.embedded-container.jsp-limitations

# 3 === Embedded Reactive Server Support
boot-features-reactive-server=\
features.developing-web-applications.reactive-server

# 3 === Reactive Server Resources Configuration
boot-features-reactive-server-resources=\
features.developing-web-applications.reactive-server-resources-configuration

# 2 == Graceful shutdown
boot-features-graceful-shutdown=\
features.graceful-shutdown

# 2 == RSocket
boot-features-rsocket=\
features.rsocket

# 3 === RSocket Strategies Auto-configuration
boot-features-rsocket-strategies-auto-configuration=\
features.rsocket.strategies-auto-configuration

# 3 === RSocket server Auto-configuration
boot-features-rsocket-server-auto-configuration=\
features.rsocket.server-auto-configuration

# 3 === Spring Messaging RSocket support
boot-features-rsocket-messaging=\
features.rsocket.messaging

# 3 === Calling RSocket Services with RSocketRequester
boot-features-rsocket-requester=\
features.rsocket.requester

# 2 == Security
boot-features-security=\
features.security

# 3 === MVC Security
boot-features-security-mvc=\
features.security.spring-mvc

# 3 === WebFlux Security
boot-features-security-webflux=\
features.security.spring-webflux

# 3 === OAuth2
boot-features-security-oauth2=\
features.security.oauth2

# 4 ==== Client
boot-features-security-oauth2-client=\
features.security.oauth2.client

# 5 ===== OAuth2 client registration for common providers
boot-features-security-oauth2-common-providers=\
features.security.oauth2.client.common-providers

# 4 ==== Resource Server
boot-features-security-oauth2-server=\
features.security.oauth2.server

# 4 ==== Authorization Server
boot-features-security-authorization-server=\
features.security.oauth2.authorization-server

# 3 === SAML 2.0
boot-features-security-saml=\
features.security.saml2

# 4 ==== Relying Party
boot-features-security-saml2-relying-party=\
features.security.saml2.relying-party

# 3 === Actuator Security
boot-features-security-actuator=\
features.security.actuator

# 4 ==== Cross Site Request Forgery Protection
boot-features-security-csrf=\
features.security.actuator.csrf

# 2 == Working with SQL Databases
boot-features-sql=\
features.sql

# 3 === Configure a DataSource
boot-features-configure-datasource=\
features.sql.datasource

# 4 ==== Embedded Database Support
boot-features-embedded-database-support=\
features.sql.datasource.embedded

# 4 ==== Connection to a Production Database
boot-features-connect-to-production-database=\
features.sql.datasource.production

# 4 ==== DataSource Configuration
boot-features-connect-to-production-database-configuration=\
features.sql.datasource.configuration

# 4 ==== Supported Connection Pools
boot-features-connect-to-production-database-connection-pool=\
features.sql.datasource.connection-pool

# 4 ==== Connection to a JNDI DataSource
boot-features-connecting-to-a-jndi-datasource=\
features.sql.datasource.jndi

# 3 === Using JdbcTemplate
boot-features-using-jdbc-template=\
features.sql.jdbc-template

# 3 === JPA and Spring Data JPA
boot-features-jpa-and-spring-data=\
features.sql.jpa-and-spring-data

# 4 ==== Entity Classes
boot-features-entity-classes=\
features.sql.jpa-and-spring-data.entity-classes

# 4 ==== Spring Data JPA Repositories
boot-features-spring-data-jpa-repositories=\
features.sql.jpa-and-spring-data.repositories

# 4 ==== Creating and Dropping JPA Databases
boot-features-creating-and-dropping-jpa-databases=\
features.sql.jpa-and-spring-data.creating-and-dropping

# 4 ==== Open EntityManager in View
boot-features-jpa-in-web-environment=\
features.sql.jpa-and-spring-data.open-entity-manager-in-view

# 3 === Spring Data JDBC
boot-features-data-jdbc=\
features.sql.jdbc

# 3 === Using H2's Web Console
boot-features-sql-h2-console=\
features.sql.h2-web-console

# 4 ==== Changing the H2 Console's Path
boot-features-sql-h2-console-custom-path=\
features.sql.h2-web-console.custom-path

# 3 === Using jOOQ
boot-features-jooq=\
features.sql.jooq

# 4 ==== Code Generation
boot-features-jooq-codegen=\
features.sql.jooq.codegen

# 4 ==== Using DSLContext
boot-features-jooq-dslcontext=\
features.sql.jooq.dslcontext

# 4 ==== jOOQ SQL Dialect
boot-features-jooq-sqldialect=\
features.sql.jooq.sqldialect

# 4 ==== Customizing jOOQ
boot-features-jooq-customizing=\
features.sql.jooq.customizing

# 3 === Using R2DBC
boot-features-r2dbc=\
features.sql.r2dbc

# 4 ==== Embedded Database Support
boot-features-r2dbc-embedded-database=\
features.sql.r2dbc.embedded

# 4 ==== Using DatabaseClient
boot-features-r2dbc-using-database-client=\
features.sql.r2dbc.using-database-client

# 4 ==== Spring Data R2DBC Repositories
boot-features-spring-data-r2dbc-repositories=\
features.sql.r2dbc.repositories

# 2 == Working with NoSQL Technologies
boot-features-nosql=\
features.nosql

# 3 === Redis
boot-features-redis=\
features.nosql.redis

# 4 ==== Connecting to Redis
boot-features-connecting-to-redis=\
features.nosql.redis.connecting

# 3 === MongoDB
boot-features-mongodb=\
features.nosql.mongodb

# 4 ==== Connecting to a MongoDB Database
boot-features-connecting-to-mongodb=\
features.nosql.mongodb.connecting

# 4 ==== MongoTemplate
boot-features-mongo-template=\
features.nosql.mongodb.template

# 4 ==== Spring Data MongoDB Repositories
boot-features-spring-data-mongodb-repositories=\
features.nosql.mongodb.repositories

boot-features-spring-data-mongo-repositories=\
features.nosql.mongodb.repositories

# 4 ==== Embedded Mongo
boot-features-mongo-embedded=\
features.nosql.mongodb.embedded

# 3 === Neo4j
boot-features-neo4j=\
features.nosql.neo4j

# 4 ==== Connecting to a Neo4j Database
boot-features-connecting-to-neo4j=\
features.nosql.neo4j.connecting

# 4 ==== Spring Data Neo4j Repositories
boot-features-spring-data-neo4j-repositories=\
features.nosql.neo4j.repositories

# 3 === Solr
boot-features-solr=\
features.nosql.solr

# 4 ==== Connecting to Solr
boot-features-connecting-to-solr=\
features.nosql.solr.connecting

# 3 === Elasticsearch
boot-features-elasticsearch=\
features.nosql.elasticsearch

# 4 ==== Connecting to Elasticsearch using REST clients
boot-features-connecting-to-elasticsearch-rest=\
features.nosql.elasticsearch.connecting-using-rest

# 4 ==== Connecting to Elasticsearch using Reactive REST clients
boot-features-connecting-to-elasticsearch-reactive-rest=\
features.nosql.elasticsearch.connecting-using-reactive-rest

# 4 ==== Connecting to Elasticsearch by Using Spring Data
boot-features-connecting-to-elasticsearch-spring-data=\
features.nosql.elasticsearch.connecting-using-spring-data

# 4 ==== Spring Data Elasticsearch Repositories
boot-features-spring-data-elasticsearch-repositories=\
features.nosql.elasticsearch.repositories

# 3 === Cassandra
boot-features-cassandra=\
features.nosql.cassandra

# 4 ==== Connecting to Cassandra
boot-features-connecting-to-cassandra=\
features.nosql.cassandra.connecting

# 4 ==== Spring Data Cassandra Repositories
boot-features-spring-data-cassandra-repositories=\
features.nosql.cassandra.repositories

# 3 === Couchbase
boot-features-couchbase=\
features.nosql.couchbase

# 4 ==== Connecting to Couchbase
boot-features-connecting-to-couchbase=\
features.nosql.couchbase.connecting

# 4 ==== Spring Data Couchbase Repositories
boot-features-spring-data-couchbase-repositories=\
features.nosql.couchbase.repositories

# 3 === LDAP
boot-features-ldap=\
features.nosql.ldap

# 4 ==== Connecting to an LDAP Server
boot-features-ldap-connecting=\
features.nosql.ldap.connecting

# 4 ==== Spring Data LDAP Repositories
boot-features-ldap-spring-data-repositories=\
features.nosql.ldap.repositories

# 4 ==== Embedded In-memory LDAP Server
boot-features-ldap-embedded=\
features.nosql.ldap.embedded

# 3 === InfluxDB
boot-features-influxdb=\
features.nosql.influxdb

# 4 ==== Connecting to InfluxDB
boot-features-connecting-to-influxdb=\
features.nosql.influxdb.connecting

# 2 == Caching
boot-features-caching=\
features.caching

# 3 === Supported Cache Providers
boot-features-caching-provider=\
features.caching.provider

# 4 ==== Generic
boot-features-caching-provider-generic=\
features.caching.provider.generic

# 4 ==== JCache (JSR-107)
boot-features-caching-provider-jcache=\
features.caching.provider.jcache

# 4 ==== EhCache 2.x
boot-features-caching-provider-ehcache2=\
features.caching.provider.ehcache2

# 4 ==== Hazelcast
boot-features-caching-provider-hazelcast=\
features.caching.provider.hazelcast

# 4 ==== Infinispan
boot-features-caching-provider-infinispan=\
features.caching.provider.infinispan

# 4 ==== Couchbase
boot-features-caching-provider-couchbase=\
features.caching.provider.couchbase

# 4 ==== Redis
boot-features-caching-provider-redis=\
features.caching.provider.redis

# 4 ==== Caffeine
boot-features-caching-provider-caffeine=\
features.caching.provider.caffeine

# 4 ==== Simple
boot-features-caching-provider-simple=\
features.caching.provider.simple

# 4 ==== None
boot-features-caching-provider-none=\
features.caching.provider.none

# 2 == Messaging
boot-features-messaging=\
features.messaging

# 3 === JMS
boot-features-jms=\
features.messaging.jms

# 4 ==== ActiveMQ Support
boot-features-activemq=\
features.messaging.jms.activemq

# 4 ==== ActiveMQ Artemis Support
boot-features-artemis=\
features.messaging.jms.artemis

# 4 ==== Using a JNDI ConnectionFactory
boot-features-jms-jndi=\
features.messaging.jms.jndi

# 4 ==== Sending a Message
boot-features-using-jms-sending=\
features.messaging.jms.sending

# 4 ==== Receiving a Message
boot-features-using-jms-receiving=\
features.messaging.jms.receiving

# 3 === AMQP
boot-features-amqp=\
features.messaging.amqp

# 4 ==== RabbitMQ support
boot-features-rabbitmq=\
features.messaging.amqp.rabbitmq

# 4 ==== Sending a Message
boot-features-using-amqp-sending=\
features.messaging.amqp.sending

# 4 ==== Receiving a Message
boot-features-using-amqp-receiving=\
features.messaging.amqp.receiving

# 3 === Apache Kafka Support
boot-features-kafka=\
features.messaging.kafka

# 4 ==== Sending a Message
boot-features-kafka-sending-a-message=\
features.messaging.kafka.sending

# 4 ==== Receiving a Message
boot-features-kafka-receiving-a-message=\
features.messaging.kafka.receiving

# 4 ==== Kafka Streams
boot-features-kafka-streams=\
features.messaging.kafka.streams

# 4 ==== Additional Kafka Properties
boot-features-kafka-extra-props=\
features.messaging.kafka.additional-properties

# 4 ==== Testing with Embedded Kafka
boot-features-embedded-kafka=\
features.messaging.kafka.embedded

# 2 == Calling REST Services with RestTemplate
boot-features-resttemplate=\
features.resttemplate

# 3 === RestTemplate Customization
boot-features-resttemplate-customization=\
features.resttemplate.customization

# 2 == Calling REST Services with WebClient
boot-features-webclient=\
features.webclient

# 3 === WebClient Runtime
boot-features-webclient-runtime=\
features.webclient.runtime

# 3 === WebClient Customization
boot-features-webclient-customization=\
features.webclient.customization

# 2 == Validation
boot-features-validation=\
features.validation

# 2 == Sending Email
boot-features-email=\
features.email

# 2 == Distributed Transactions with JTA
boot-features-jta=\
features.jta

# 3 === Using an Atomikos Transaction Manager
boot-features-jta-atomikos=\
features.jta.atomikos

# 3 === Using a Java EE Managed Transaction Manager
boot-features-jta-javaee=\
features.jta.javaee

# 3 === Mixing XA and Non-XA JMS Connections
boot-features-jta-mixed-jms=\
features.jta.mixing-xa-and-non-xa-connections

# 3 === Supporting an Alternative Embedded Transaction Manager
boot-features-jta-supporting-alternative-embedded=\
features.jta.supporting-alternative-embedded-transaction-manager

# 2 == Hazelcast
boot-features-hazelcast=\
features.hazelcast

# 2 == Quartz Scheduler
boot-features-quartz=\
features.quartz

# 2 == Task Execution and Scheduling
boot-features-task-execution-scheduling=\
features.task-execution-and-scheduling

# 2 == Spring Integration
boot-features-integration=\
features.spring-integration

# 2 == Spring Session
boot-features-session=\
features.spring-session

# 2 == Monitoring and Management over JMX
boot-features-jmx=\
features.jmx

# 2 == Testing
boot-features-testing=\
features.testing

# 3 === Test Scope Dependencies
boot-features-test-scope-dependencies=\
features.testing.test-scope-dependencies

# 3 === Testing Spring Applications
boot-features-testing-spring-applications=\
features.testing.spring-applications

# 3 === Testing Spring Boot Applications
boot-features-testing-spring-boot-applications=\
features.testing.spring-boot-applications

# 4 ==== Detecting Web Application Type
boot-features-testing-spring-boot-applications-detecting-web-app-type=\
features.testing.spring-boot-applications.detecting-web-app-type

# 4 ==== Detecting Test Configuration
boot-features-testing-spring-boot-applications-detecting-config=\
features.testing.spring-boot-applications.detecting-configuration

# 4 ==== Excluding Test Configuration
boot-features-testing-spring-boot-applications-excluding-config=\
features.testing.spring-boot-applications.excluding-configuration

# 4 ==== Using Application Arguments
boot-features-testing-spring-boot-application-arguments=\
features.testing.spring-boot-applications.using-application-arguments

# 4 ==== Testing with a mock environment
boot-features-testing-spring-boot-applications-testing-with-mock-environment=\
features.testing.spring-boot-applications.with-mock-environment

# 4 ==== Testing with a running server
boot-features-testing-spring-boot-applications-testing-with-running-server=\
features.testing.spring-boot-applications.with-running-server

# 4 ==== Customizing WebTestClient
boot-features-testing-spring-boot-applications-customizing-web-test-client=\
features.testing.spring-boot-applications.customizing-web-test-client

# 4 ==== Using JMX
boot-features-testing-spring-boot-applications-jmx=\
features.testing.spring-boot-applications.jmx

# 4 ==== Using Metrics
boot-features-testing-spring-boot-applications-metrics=\
features.testing.spring-boot-applications.metrics

# 4 ==== Mocking and Spying Beans
boot-features-testing-spring-boot-applications-mocking-beans=\
features.testing.spring-boot-applications.mocking-beans

# 4 ==== Auto-configured Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-tests=\
features.testing.spring-boot-applications.autoconfigured-tests

# 4 ==== Auto-configured JSON Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-json-tests=\
features.testing.spring-boot-applications.json-tests

# 4 ==== Auto-configured Spring MVC Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-mvc-tests=\
features.testing.spring-boot-applications.spring-mvc-tests

# 4 ==== Auto-configured Spring WebFlux Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-webflux-tests=\
features.testing.spring-boot-applications.spring-webflux-tests

# 4 ==== Auto-configured Data Cassandra Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-cassandra-test=\
features.testing.spring-boot-applications.autoconfigured-spring-data-cassandra

# 4 ==== Auto-configured Data JPA Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-jpa-test=\
features.testing.spring-boot-applications.autoconfigured-spring-data-jpa

# 4 ==== Auto-configured JDBC Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-jdbc-test=\
features.testing.spring-boot-applications.autoconfigured-jdbc

# 4 ==== Auto-configured Data JDBC Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-data-jdbc-test=\
features.testing.spring-boot-applications.autoconfigured-spring-data-jdbc

# 4 ==== Auto-configured jOOQ Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-jooq-test=\
features.testing.spring-boot-applications.autoconfigured-jooq

# 4 ==== Auto-configured Data MongoDB Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-mongo-test=\
features.testing.spring-boot-applications.autoconfigured-spring-data-mongodb

# 4 ==== Auto-configured Data Neo4j Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-neo4j-test=\
features.testing.spring-boot-applications.autoconfigured-spring-data-neo4j

# 4 ==== Auto-configured Data Redis Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-redis-test=\
features.testing.spring-boot-applications.autoconfigured-spring-data-redis

# 4 ==== Auto-configured Data LDAP Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-ldap-test=\
features.testing.spring-boot-applications.autoconfigured-spring-data-ldap

# 4 ==== Auto-configured REST Clients
boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-client=\
features.testing.spring-boot-applications.autoconfigured-rest-client

# 4 ==== Auto-configured Spring REST Docs Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs=\
features.testing.spring-boot-applications.autoconfigured-spring-restdocs

# 5 ===== Auto-configured Spring REST Docs Tests with Mock MVC
boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs-mock-mvc=\
features.testing.spring-boot-applications.autoconfigured-spring-restdocs.with-mock-mvc

# 5 ===== Auto-configured Spring REST Docs Tests with WebTestClient
boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs-web-test-client=\
features.testing.spring-boot-applications.autoconfigured-spring-restdocs.with-web-test-client

# 5 ===== Auto-configured Spring REST Docs Tests with REST Assured
boot-features-testing-spring-boot-applications-testing-autoconfigured-rest-docs-rest-assured=\
features.testing.spring-boot-applications.autoconfigured-spring-restdocs.with-rest-assured

# 4 ==== Auto-configured Spring Web Services Tests
boot-features-testing-spring-boot-applications-testing-autoconfigured-webservices=\
features.testing.spring-boot-applications.autoconfigured-webservices

# 4 ==== Additional Auto-configuration and Slicing
boot-features-testing-spring-boot-applications-testing-auto-configured-additional-auto-config=\
features.testing.spring-boot-applications.additional-autoconfiguration-and-slicing

# 4 ==== User Configuration and Slicing
boot-features-testing-spring-boot-applications-testing-user-configuration=\
features.testing.spring-boot-applications.user-configuration-and-slicing

# 4 ==== Using Spock to Test Spring Boot Applications
boot-features-testing-spring-boot-applications-with-spock=\
features.testing.spring-boot-applications.spock

# 3 === Test Utilities
boot-features-test-utilities=\
features.testing.utilities

# 4 ==== ConfigDataApplicationContextInitializer
boot-features-configfileapplicationcontextinitializer-test-utility=\
features.testing.utilities.config-data-application-context-initializer

# 4 ==== TestPropertyValues
boot-features-test-property-values=\
features.testing.utilities.test-property-values

# 4 ==== OutputCapture
boot-features-output-capture-test-utility=\
features.testing.utilities.output-capture

# 4 ==== TestRestTemplate
boot-features-rest-templates-test-utility=\
features.testing.utilities.test-rest-template

# 2 == WebSockets
boot-features-websockets=\
features.websockets

# 2 == Web Services
boot-features-webservices=\
features.webservices

# 3 === Calling Web Services with WebServiceTemplate
boot-features-webservices-template=\
features.webservices.template

# 2 == Creating Your Own Auto-configuration
boot-features-developing-auto-configuration=\
features.developing-auto-configuration

# 3 === Understanding Auto-configured Beans
boot-features-understanding-auto-configured-beans=\
features.developing-auto-configuration.understanding-auto-configured-beans

# 3 === Locating Auto-configuration Candidates
boot-features-locating-auto-configuration-candidates=\
features.developing-auto-configuration.locating-auto-configuration-candidates

# 3 === Condition Annotations
boot-features-condition-annotations=\
features.developing-auto-configuration.condition-annotations

# 4 ==== Class Conditions
boot-features-class-conditions=\
features.developing-auto-configuration.condition-annotations.class-conditions

# 4 ==== Bean Conditions
boot-features-bean-conditions=\
features.developing-auto-configuration.condition-annotations.bean-conditions

# 4 ==== Property Conditions
boot-features-property-conditions=\
features.developing-auto-configuration.condition-annotations.property-conditions

# 4 ==== Resource Conditions
boot-features-resource-conditions=\
features.developing-auto-configuration.condition-annotations.resource-conditions

# 4 ==== Web Application Conditions
boot-features-web-application-conditions=\
features.developing-auto-configuration.condition-annotations.web-application-conditions

# 4 ==== SpEL Expression Conditions
boot-features-spel-conditions=\
features.developing-auto-configuration.condition-annotations.spel-conditions

# 3 === Testing your Auto-configuration
boot-features-test-autoconfig=\
features.developing-auto-configuration.testing

# 4 ==== Simulating a Web Context
boot-features-test-autoconfig-simulating-web-context=\
features.developing-auto-configuration.testing.simulating-a-web-context

# 4 ==== Overriding the Classpath
boot-features-test-autoconfig-overriding-classpath=\
features.developing-auto-configuration.testing.overriding-classpath

# 3 === Creating Your Own Starter
boot-features-custom-starter=\
features.developing-auto-configuration.custom-starter

# 4 ==== Naming
boot-features-custom-starter-naming=\
features.developing-auto-configuration.custom-starter.naming

# 4 ==== Configuration keys
boot-features-custom-starter-configuration-keys=\
features.developing-auto-configuration.custom-starter.configuration-keys

# 4 ==== The "`autoconfigure`" Module
boot-features-custom-starter-module-autoconfigure=\
features.developing-auto-configuration.custom-starter.autoconfigure-module

# 4 ==== Starter Module
boot-features-custom-starter-module-starter=\
features.developing-auto-configuration.custom-starter.starter-module

# 2 == Kotlin support
boot-features-kotlin=\
features.kotlin

# 3 === Requirements
boot-features-kotlin-requirements=\
features.kotlin.requirements

# 3 === Null-safety
boot-features-kotlin-null-safety=\
features.kotlin.null-safety

# 3 === Kotlin API
boot-features-kotlin-api=\
features.kotlin.api

# 4 ==== runApplication
boot-features-kotlin-api-runapplication=\
features.kotlin.api.?run-application

# 4 ==== Extensions
boot-features-kotlin-api-extensions=\
features.kotlin.api.extensions

# 3 === Dependency management
boot-features-kotlin-dependency-management=\
features.kotlin.dependency-management

# 3 === @ConfigurationProperties
boot-features-kotlin-configuration-properties=\
features.kotlin.configuration-properties

# 3 === Testing
boot-features-kotlin-testing=\
features.kotlin.testing

# 3 === Resources
boot-features-kotlin-resources=\
features.kotlin.resources

# 4 ==== Further reading
boot-features-kotlin-resources-further-reading=\
features.kotlin.resources.further-reading

# 4 ==== Examples
boot-features-kotlin-resources-examples=\
features.kotlin.resources.examples

# 2 == Container Images
boot-features-container-images=\
features.container-images

# 3 === Layering Docker Images
boot-layering-docker-images=\
features.container-images.layering

# 3 === Building Container Images
boot-features-container-images-building=\
features.container-images.building

# 4 ==== Dockerfiles
boot-features-container-images-docker=\
features.container-images.building.dockerfiles

# 4 ==== Cloud Native Buildpacks
boot-features-container-images-buildpacks=\
features.container-images.building.buildpacks

# 2 == What to Read Next
boot-features-whats-next=\
features.whats-next



# (actuator.adoc)
# 1 = Spring Boot Actuator: Production-ready Features
production-ready=\
actuator

# 2 == Enabling Production-ready Features
production-ready-enabling=\
actuator.enabling

# 2 == Endpoints
production-ready-endpoints=\
actuator.endpoints

# 3 === Enabling Endpoints
production-ready-endpoints-enabling-endpoints=\
actuator.endpoints.enabling

# 3 === Exposing Endpoints
production-ready-endpoints-exposing-endpoints=\
actuator.endpoints.exposing

# 3 === Securing HTTP Endpoints
production-ready-endpoints-security=\
actuator.endpoints.security

# 3 === Configuring Endpoints
production-ready-endpoints-caching=\
actuator.endpoints.caching

# 3 === Hypermedia for Actuator Web Endpoints
production-ready-endpoints-hypermedia=\
actuator.endpoints.hypermedia

# 3 === CORS Support
production-ready-endpoints-cors=\
actuator.endpoints.cors

# 3 === Implementing Custom Endpoints
production-ready-endpoints-custom=\
actuator.endpoints.implementing-custom

# 4 ==== Receiving Input
production-ready-endpoints-custom-input=\
actuator.endpoints.implementing-custom.input

# 5 ===== Input Type Conversion
production-ready-endpoints-custom-input-conversion=\
actuator.endpoints.implementing-custom.input.conversion

# 4 ==== Custom Web Endpoints
production-ready-endpoints-custom-web=\
actuator.endpoints.implementing-custom.web

# 5 ===== Web Endpoint Request Predicates
production-ready-endpoints-custom-web-predicate=\
actuator.endpoints.implementing-custom.web.request-predicates

# 5 ===== Path
production-ready-endpoints-custom-web-predicate-path=\
actuator.endpoints.implementing-custom.web.path-predicates

# 5 ===== HTTP method
production-ready-endpoints-custom-web-predicate-http-method=\
actuator.endpoints.implementing-custom.web.method-predicates

# 5 ===== Consumes
production-ready-endpoints-custom-web-predicate-consumes=\
actuator.endpoints.implementing-custom.web.consumes-predicates

# 5 ===== Produces
production-ready-endpoints-custom-web-predicate-produces=\
actuator.endpoints.implementing-custom.web.produces-predicates

# 5 ===== Web Endpoint Response Status
production-ready-endpoints-custom-web-response-status=\
actuator.endpoints.implementing-custom.web.response-status

# 5 ===== Web Endpoint Range Requests
production-ready-endpoints-custom-web-range-requests=\
actuator.endpoints.implementing-custom.web.range-requests

# 5 ===== Web Endpoint Security
production-ready-endpoints-custom-web-security=\
actuator.endpoints.implementing-custom.web.security

# 4 ==== Servlet Endpoints
production-ready-endpoints-custom-servlet=\
actuator.endpoints.implementing-custom.servlet

# 4 ==== Controller Endpoints
production-ready-endpoints-custom-controller=\
actuator.endpoints.implementing-custom.controller

# 3 === Health Information
production-ready-health=\
actuator.endpoints.health

# 4 ==== Auto-configured HealthIndicators
production-ready-health-indicators=\
actuator.endpoints.health.auto-configured-health-indicators

# 4 ==== Writing Custom HealthIndicators
production-ready-health-indicators-writing=\
actuator.endpoints.health.writing-custom-health-indicators

# 4 ==== Reactive Health Indicators
reactive-health-indicators=\
actuator.endpoints.health.reactive-health-indicators

# 4 ==== Auto-configured ReactiveHealthIndicators
reactive-health-indicators-autoconfigured=\
actuator.endpoints.health.auto-configured-reactive-health-indicators

# 4 ==== Health Groups
production-ready-health-groups=\
actuator.endpoints.health.groups

# 4 ==== DataSource Health
production-ready-health-datasource=\
actuator.endpoints.health.datasource

# 3 === Kubernetes Probes
production-ready-kubernetes-probes=\
actuator.endpoints.kubernetes-probes

# 4 ==== Checking External State with Kubernetes Probes
production-ready-kubernetes-probes-external-state=\
actuator.endpoints.kubernetes-probes.external-state

# 4 ==== Application Lifecycle and Probe States
production-ready-kubernetes-probes-lifecycle=\
actuator.endpoints.kubernetes-probes.lifecycle

# 3 === Application Information
production-ready-application-info=\
actuator.endpoints.info

# 4 ==== Auto-configured InfoContributors
production-ready-application-info-autoconfigure=\
actuator.endpoints.info.auto-configured-info-contributors

# 4 ==== Custom Application Information
production-ready-application-info-env=\
actuator.endpoints.info.custom-application-information

# 4 ==== Git Commit Information
production-ready-application-info-git=\
actuator.endpoints.info.git-commit-information

# 4 ==== Build Information
production-ready-application-info-build=\
actuator.endpoints.info.build-information

# 4 ==== Writing Custom InfoContributors
production-ready-application-info-custom=\
actuator.endpoints.info.writing-custom-info-contributors

# 2 == Monitoring and Management over HTTP
production-ready-monitoring=\
actuator.monitoring

# 3 === Customizing the Management Endpoint Paths
production-ready-customizing-management-server-context-path=\
actuator.monitoring.customizing-management-server-context-path

# 3 === Customizing the Management Server Port
production-ready-customizing-management-server-port=\
actuator.monitoring.customizing-management-server-port

# 3 === Configuring Management-specific SSL
production-ready-management-specific-ssl=\
actuator.monitoring.management-specific-ssl

# 3 === Customizing the Management Server Address
production-ready-customizing-management-server-address=\
actuator.monitoring.customizing-management-server-address

# 3 === Disabling HTTP Endpoints
production-ready-disabling-http-endpoints=\
actuator.monitoring.disabling-http-endpoints

# 2 == Monitoring and Management over JMX
production-ready-jmx=\
actuator.jmx

# 3 === Customizing MBean Names
production-ready-custom-mbean-names=\
actuator.jmx.custom-mbean-names

# 3 === Disabling JMX Endpoints
production-ready-disable-jmx-endpoints=\
actuator.jmx.disable-jmx-endpoints

# 3 === Using Jolokia for JMX over HTTP
production-ready-jolokia=\
actuator.jmx.jolokia

# 4 ==== Customizing Jolokia
production-ready-customizing-jolokia=\
actuator.jmx.jolokia.customizing

# 4 ==== Disabling Jolokia
production-ready-disabling-jolokia=\
actuator.jmx.jolokia.disabling

# 2 == Loggers
production-ready-loggers=\
actuator.loggers

# 3 === Configure a Logger
production-ready-logger-configuration=\
actuator.loggers.configure

# 2 == Metrics
production-ready-metrics=\
actuator.metrics

# 3 === Getting started
production-ready-metrics-getting-started=\
actuator.metrics.getting-started

# 3 === Supported Monitoring Systems
production-ready-metrics-export=\
actuator.metrics.export

# 4 ==== AppOptics
production-ready-metrics-export-appoptics=\
actuator.metrics.export.appoptics

# 4 ==== Atlas
production-ready-metrics-export-atlas=\
actuator.metrics.export.atlas

# 4 ==== Datadog
production-ready-metrics-export-datadog=\
actuator.metrics.export.datadog

# 4 ==== Dynatrace
production-ready-metrics-export-dynatrace=\
actuator.metrics.export.dynatrace

# 4 ==== Elastic
production-ready-metrics-export-elastic=\
actuator.metrics.export.elastic

# 4 ==== Ganglia
production-ready-metrics-export-ganglia=\
actuator.metrics.export.ganglia

# 4 ==== Graphite
production-ready-metrics-export-graphite=\
actuator.metrics.export.graphite

# 4 ==== Humio
production-ready-metrics-export-humio=\
actuator.metrics.export.humio

# 4 ==== Influx
production-ready-metrics-export-influx=\
actuator.metrics.export.influx

# 4 ==== JMX
production-ready-metrics-export-jmx=\
actuator.metrics.export.jmx

# 4 ==== KairosDB
production-ready-metrics-export-kairos=\
actuator.metrics.export.kairos

# 4 ==== New Relic
production-ready-metrics-export-newrelic=\
actuator.metrics.export.newrelic

# 4 ==== Prometheus
production-ready-metrics-export-prometheus=\
actuator.metrics.export.prometheus

# 4 ==== SignalFx
production-ready-metrics-export-signalfx=\
actuator.metrics.export.signalfx

# 4 ==== Simple
production-ready-metrics-export-simple=\
actuator.metrics.export.simple

# 4 ==== Stackdriver
production-ready-metrics-export-stackdriver=\
actuator.metrics.export.stackdriver

# 4 ==== StatsD
production-ready-metrics-export-statsd=\
actuator.metrics.export.statsd

# 4 ==== Wavefront
production-ready-metrics-export-wavefront=\
actuator.metrics.export.wavefront

# 3 === Supported Metrics and Meters
production-ready-metrics-meter=\
actuator.metrics.supported

# 4 ==== JVM Metrics
production-ready-metrics-jvm=\
actuator.metrics.supported.jvm

# 4 ==== System Metrics
production-ready-metrics-system=\
actuator.metrics.supported.system

# 4 ==== Logger Metrics
production-ready-metrics-logger=\
actuator.metrics.supported.logger

# 4 ==== Spring MVC Metrics
production-ready-metrics-spring-mvc=\
actuator.metrics.supported.spring-mvc

# 4 ==== Spring WebFlux Metrics
production-ready-metrics-web-flux=\
actuator.metrics.supported.spring-webflux

# 4 ==== Jersey Server Metrics
production-ready-metrics-jersey-server=\
actuator.metrics.supported.jersey

# 4 ==== HTTP Client Metrics
production-ready-metrics-http-clients=\
actuator.metrics.supported.http-clients

# 4 ==== Tomcat Metrics
production-ready-metrics-tomcat=\
actuator.metrics.supported.tomcat

# 4 ==== Cache Metrics
production-ready-metrics-cache=\
actuator.metrics.supported.cache

# 4 ==== DataSource Metrics
production-ready-metrics-jdbc=\
actuator.metrics.supported.jdbc

# 4 ==== Hibernate Metrics
production-ready-metrics-hibernate=\
actuator.metrics.supported.hibernate

# 4 ==== Spring Data Repository Metrics
production-ready-metrics-data-repository=\
actuator.metrics.supported.spring-data-repository

# 4 ==== RabbitMQ Metrics
production-ready-metrics-rabbitmq=\
actuator.metrics.supported.rabbitmq

# 4 ==== Spring Integration Metrics
production-ready-metrics-integration=\
actuator.metrics.supported.spring-integration

# 4 ==== Kafka Metrics
production-ready-metrics-kafka=\
actuator.metrics.supported.kafka

# 4 ==== MongoDB Metrics
production-ready-metrics-mongodb=\
actuator.metrics.supported.mongodb

# 5 ===== Command Metrics
production-ready-metrics-mongodb-command=\
actuator.metrics.supported.mongodb.command

# 5 ===== Connection Pool Metrics
production-ready-metrics-mongodb-connectionpool=\
actuator.metrics.supported.mongodb.connection-pool

# 4 ==== @Timed Annotation Support
production-ready-metrics-timed-annotation=\
actuator.metrics.supported.timed-annotation

# 3 === Registering Custom Metrics
production-ready-metrics-custom=\
actuator.metrics.registering-custom

# 3 === Customizing Individual Metrics
production-ready-metrics-customizing=\
actuator.metrics.customizing

# 4 ==== Common Tags
production-ready-metrics-common-tags=\
actuator.metrics.customizing.common-tags

# 4 ==== Per-meter Properties
production-ready-metrics-per-meter-properties=\
actuator.metrics.customizing.per-meter-properties

# 3 === Metrics Endpoint
production-ready-metrics-endpoint=\
actuator.metrics.endpoint

# 2 == Auditing
production-ready-auditing=\
actuator.auditing

# 3 === Custom Auditing
production-ready-auditing-custom=\
actuator.auditing.custom

# 2 == HTTP Tracing
production-ready-http-tracing=\
actuator.tracing

# 3 === Custom HTTP tracing
production-ready-http-tracing-custom=\
actuator.tracing.custom

# 2 == Process Monitoring
production-ready-process-monitoring=\
actuator.process-monitoring

# 3 === Extending Configuration
production-ready-process-monitoring-configuration=\
actuator.process-monitoring.configuration

# 3 === Programmatically
production-ready-process-monitoring-programmatically=\
actuator.process-monitoring.programmatically

# 2 == Cloud Foundry Support
production-ready-cloudfoundry=\
actuator.cloud-foundry

# 3 === Disabling Extended Cloud Foundry Actuator Support
production-ready-cloudfoundry-disable=\
actuator.cloud-foundry.disable

# 3 === Cloud Foundry Self-signed Certificates
production-ready-cloudfoundry-ssl=\
actuator.cloud-foundry.ssl

# 3 === Custom Context Path
production-ready-custom-context-path=\
actuator.cloud-foundry.custom-context-path

# 2 == What to Read Next
production-ready-whats-next=\
actuator.whats-next



# (deployment.adoc)
# 1 = Deploying Spring Boot Applications
deployment=\
deployment

# 2 == Deploying to Containers
containers-deployment=\
deployment.containers

# 2 == Deploying to the Cloud
cloud-deployment=\
deployment.cloud

# 3 === Cloud Foundry
cloud-deployment-cloud-foundry=\
deployment.cloud.cloud-foundry

# 4 ==== Binding to Services
cloud-deployment-cloud-foundry-services=\
deployment.cloud.cloud-foundry.binding-to-services

# 3 === Kubernetes
cloud-deployment-kubernetes=\
deployment.cloud.kubernetes

# 4 ==== Kubernetes Container Lifecycle
cloud-deployment-kubernetes-container-lifecycle=\
deployment.cloud.kubernetes.container-lifecycle

# 3 === Heroku
cloud-deployment-heroku=\
deployment.cloud.heroku

# 3 === OpenShift
cloud-deployment-openshift=\
deployment.cloud.openshift

# 3 === Amazon Web Services (AWS)
cloud-deployment-aws=\
deployment.cloud.aws

# 4 ==== AWS Elastic Beanstalk
cloud-deployment-aws-beanstalk=\
deployment.cloud.aws.beanstalk

# 5 ===== Using the Tomcat Platform
cloud-deployment-aws-tomcat-platform=\
deployment.cloud.aws.beanstalk.tomcat-platform

# 5 ===== Using the Java SE Platform
cloud-deployment-aws-java-se-platform=\
deployment.cloud.aws.beanstalk.java-se-platform

# 4 ==== Summary
cloud-deployment-aws-summary=\
deployment.cloud.aws.summary

# 3 === Boxfuse and Amazon Web Services
cloud-deployment-boxfuse=\
deployment.cloud.boxfuse

# 3 === Google Cloud
cloud-deployment-gae=\
deployment.cloud.google

# 2 == Installing Spring Boot Applications
deployment-install=\
deployment.installing

# 3 === Supported Operating Systems
deployment-install-supported-operating-systems=\
deployment.installing.supported-operating-systems

# 3 === Unix/Linux Services
deployment-service=\
deployment.installing.nix-services

# 4 ==== Installation as an init.d Service (System V)
deployment-initd-service=\
deployment.installing.nix-services.init-d

# 5 ===== Securing an init.d Service
deployment-initd-service-securing=\
deployment.installing.nix-services.init-d.securing

# 4 ==== Installation as a systemd Service
deployment-systemd-service=\
deployment.installing.nix-services.system-d

# 4 ==== Customizing the Startup Script
deployment-script-customization=\
deployment.installing.nix-services.script-customization

# 5 ===== Customizing the Start Script When It Is Written
deployment-script-customization-when-it-written=\
deployment.installing.nix-services.script-customization.when-written

# 5 ===== Customizing a Script When It Runs
deployment-script-customization-when-it-runs=\
deployment.installing.nix-services.script-customization.when-running

# 3 === Microsoft Windows Services
deployment-windows=\
deployment.installing.windows-services

# 2 == What to Read Next
deployment-whats-next=\
deployment.whats-next



# (cli.adoc)
# 1 = Spring Boot CLI
cli=\
cli

# 2 == Installing the CLI
cli-installation=\
cli.installation

# 2 == Using the CLI
cli-using-the-cli=\
cli.using-the-cli

# 3 === Running Applications with the CLI
cli-run=\
cli.using-the-cli.run

# 4 ==== Deduced "`grab`" Dependencies
cli-deduced-grab-annotations=\
cli.using-the-cli.run.deduced-grab-annotations

# 4 ==== Deduced "`grab`" Coordinates
cli-default-grab-deduced-coordinates=\
cli.using-the-cli.run.deduced-grab-coordinates

# 4 ==== Default Import Statements
cli-default-import-statements=\
cli.using-the-cli.run.default-import-statements

# 4 ==== Automatic Main Method
cli-automatic-main-method=\
cli.using-the-cli.run.automatic-main-method

# 4 ==== Custom Dependency Management
cli-default-grab-deduced-coordinates-custom-dependency-management=\
cli.using-the-cli.run.custom-dependency-management

# 3 === Applications with Multiple Source Files
cli-multiple-source-files=\
cli.using-the-cli.multiple-source-files

# 3 === Packaging Your Application
cli-jar=\
cli.using-the-cli.packaging

# 3 === Initialize a New Project
cli-init=\
cli.using-the-cli.initialize-new-project

# 3 === Using the Embedded Shell
cli-shell=\
cli.using-the-cli.embedded-shell

# 3 === Adding Extensions to the CLI
cli-install-uninstall=\
cli.using-the-cli.extensions

# 2 == Developing Applications with the Groovy Beans DSL
cli-groovy-beans-dsl=\
cli.groovy-beans-dsl

# 2 == Configuring the CLI with settings.xml
cli-maven-settings=\
cli.maven-setting

# 2 == What to Read Next
cli-whats-next=\
cli.whats-next



# (build-tool-plugins.adoc)
# 1 = Build Tool Plugins
build-tool-plugins=\
build-tool-plugins

# 2 == Spring Boot Maven Plugin
build-tool-plugins-maven-plugin=\
build-tool-plugins.maven

# 2 == Spring Boot Gradle Plugin
build-tool-plugins-gradle-plugin=\
build-tool-plugins.gradle

# 2 == Spring Boot AntLib Module
build-tool-plugins-antlib=\
build-tool-plugins.antlib

# 3 === Spring Boot Ant Tasks
spring-boot-ant-tasks=\
build-tool-plugins.antlib.tasks

# 4 ==== Using the "`exejar`" Task
spring-boot-ant-exejar=\
build-tool-plugins.antlib.tasks.exejar

# 4 ==== Examples
spring-boot-ant-exejar-examples=\
build-tool-plugins.antlib.tasks.examples

# 3 === Using the "`findmainclass`" Task
spring-boot-ant-findmainclass=\
build-tool-plugins.antlib.findmainclass

# 4 ==== Examples
spring-boot-ant-findmainclass-examples=\
build-tool-plugins.antlib.findmainclass.examples

# 2 == Supporting Other Build Systems
build-tool-plugins-other-build-systems=\
build-tool-plugins.other-build-systems

# 3 === Repackaging Archives
build-tool-plugins-repackaging-archives=\
build-tool-plugins.other-build-systems.repackaging-archives

# 3 === Nested Libraries
build-tool-plugins-nested-libraries=\
build-tool-plugins.other-build-systems.nested-libraries

# 3 === Finding a Main Class
build-tool-plugins-find-a-main-class=\
build-tool-plugins.other-build-systems.finding-main-class

# 3 === Example Repackage Implementation
build-tool-plugins-repackage-implementation=\
build-tool-plugins.other-build-systems.example-repackage-implementation

# 2 == What to Read Next
build-tool-plugins-whats-next=\
build-tool-plugins.whats-next



# (howto.adoc)
# 1 = "`How-to`" Guides
howto=\
howto

# 2 == Spring Boot Application
howto-spring-boot-application=\
howto.application

# 3 === Create Your Own FailureAnalyzer
howto-failure-analyzer=\
howto.application.failure-analyzer

# 3 === Troubleshoot Auto-configuration
howto-troubleshoot-auto-configuration=\
howto.application.troubleshoot-auto-configuration

# 3 === Customize the Environment or ApplicationContext Before It Starts
howto-customize-the-environment-or-application-context=\
howto.application.customize-the-environment-or-application-context

# 3 === Build an ApplicationContext Hierarchy (Adding a Parent or Root Context)
howto-build-an-application-context-hierarchy=\
howto.application.context-hierarchy

# 3 === Create a Non-web Application
howto-create-a-non-web-application=\
howto.application.non-web-application

# 2 == Properties and Configuration
howto-properties-and-configuration=\
howto.properties-and-configuration

# 3 === Automatically Expand Properties at Build Time
howto-automatic-expansion=\
howto.properties-and-configuration.expand-properties

# 4 ==== Automatic Property Expansion Using Maven
howto-automatic-expansion-maven=\
howto.properties-and-configuration.expand-properties.maven

# 4 ==== Automatic Property Expansion Using Gradle
howto-automatic-expansion-gradle=\
howto.properties-and-configuration.expand-properties.gradle

# 3 === Externalize the Configuration of SpringApplication
howto-externalize-configuration=\
howto.properties-and-configuration.externalize-configuration

# 3 === Change the Location of External Properties of an Application
howto-change-the-location-of-external-properties=\
howto.properties-and-configuration.external-properties-location

# 3 === Use '`Short`' Command Line Arguments
howto-use-short-command-line-arguments=\
howto.properties-and-configuration.short-command-line-arguments

# 3 === Use YAML for External Properties
howto-use-yaml-for-external-properties=\
howto.properties-and-configuration.yaml

# 3 === Set the Active Spring Profiles
howto-set-active-spring-profiles=\
howto.properties-and-configuration.set-active-spring-profiles

# 3 === Change Configuration Depending on the Environment
howto-change-configuration-depending-on-the-environment=\
howto.properties-and-configuration.change-configuration-depending-on-the-environment

# 3 === Discover Built-in Options for External Properties
howto-discover-build-in-options-for-external-properties=\
howto.properties-and-configuration.discover-build-in-options-for-external-properties

# 2 == Embedded Web Servers
howto-embedded-web-servers=\
howto.webserver

# 3 === Use Another Web Server
howto-use-another-web-server=\
howto.webserver.use-another

# 3 === Disabling the Web Server
howto-disable-web-server=\
howto.webserver.disable

# 3 === Change the HTTP Port
howto-change-the-http-port=\
howto.webserver.change-port

# 3 === Use a Random Unassigned HTTP Port
howto-user-a-random-unassigned-http-port=\
howto.webserver.use-random-port

# 3 === Discover the HTTP Port at Runtime
howto-discover-the-http-port-at-runtime=\
howto.webserver.discover-port

# 3 === Enable HTTP Response Compression
how-to-enable-http-response-compression=\
howto.webserver.enable-response-compression

# 3 === Configure SSL
howto-configure-ssl=\
howto.webserver.configure-ssl

# 3 === Configure HTTP/2
howto-configure-http2=\
howto.webserver.configure-http2

# 4 ==== HTTP/2 with Tomcat
howto-configure-http2-tomcat=\
howto.webserver.configure-http2.tomcat

# 4 ==== HTTP/2 with Jetty
howto-configure-http2-jetty=\
howto.webserver.configure-http2.jetty

# 4 ==== HTTP/2 with Reactor Netty
howto-configure-http2-netty=\
howto.webserver.configure-http2.netty

# 4 ==== HTTP/2 with Undertow
howto-configure-http2-undertow=\
howto.webserver.configure-http2.undertow

# 3 === Configure the Web Server
howto-configure-webserver=\
howto.webserver.configure

# 3 === Add a Servlet, Filter, or Listener to an Application
howto-add-a-servlet-filter-or-listener=\
howto.webserver.add-servlet-filter-listener

# 4 ==== Add a Servlet, Filter, or Listener by Using a Spring Bean
howto-add-a-servlet-filter-or-listener-as-spring-bean=\
howto.webserver.add-servlet-filter-listener.spring-bean

# 5 ===== Disable Registration of a Servlet or Filter
howto-disable-registration-of-a-servlet-or-filter=\
howto.webserver.add-servlet-filter-listener.spring-bean.disable

# 4 ==== Add Servlets, Filters, and Listeners by Using Classpath Scanning
howto-add-a-servlet-filter-or-listener-using-scanning=\
howto.webserver.add-servlet-filter-listener.using-scanning

# 3 === Configure Access Logging
howto-configure-accesslogs=\
howto.webserver.configure-access-logs

# 3 === Running Behind a Front-end Proxy Server
howto-use-behind-a-proxy-server=\
howto.webserver.use-behind-a-proxy-server

# 4 ==== Customize Tomcat's Proxy Configuration
howto-customize-tomcat-behind-a-proxy-server=\
howto.webserver.use-behind-a-proxy-server.tomcat

# 3 === Enable Multiple Connectors with Tomcat
howto-enable-multiple-connectors-in-tomcat=\
howto.webserver.enable-multiple-connectors-in-tomcat

# 3 === Use Tomcat's LegacyCookieProcessor
howto-use-tomcat-legacycookieprocessor=\
howto.webserver.use-tomcat-legacycookieprocessor

# 3 === Enable Tomcat's MBean Registry
howto-enable-tomcat-mbean-registry=\
howto.webserver.enable-tomcat-mbean-registry

# 3 === Enable Multiple Listeners with Undertow
howto-enable-multiple-listeners-in-undertow=\
howto.webserver.enable-multiple-listeners-in-undertow

# 3 === Create WebSocket Endpoints Using @ServerEndpoint
howto-create-websocket-endpoints-using-serverendpoint=\
howto.webserver.create-websocket-endpoints-using-serverendpoint

# 2 == Spring MVC
howto-spring-mvc=\
howto.spring-mvc

# 3 === Write a JSON REST Service
howto-write-a-json-rest-service=\
howto.spring-mvc.write-json-rest-service

# 3 === Write an XML REST Service
howto-write-an-xml-rest-service=\
howto.spring-mvc.write-xml-rest-service

# 3 === Customize the Jackson ObjectMapper
howto-customize-the-jackson-objectmapper=\
howto.spring-mvc.customize-jackson-objectmapper

# 3 === Customize the @ResponseBody Rendering
howto-customize-the-responsebody-rendering=\
howto.spring-mvc.customize-responsebody-rendering

# 3 === Handling Multipart File Uploads
howto-multipart-file-upload-configuration=\
howto.spring-mvc.multipart-file-uploads

# 3 === Switch Off the Spring MVC DispatcherServlet
howto-switch-off-the-spring-mvc-dispatcherservlet=\
howto.spring-mvc.switch-off-dispatcherservlet

# 3 === Switch off the Default MVC Configuration
howto-switch-off-default-mvc-configuration=\
howto.spring-mvc.switch-off-default-configuration

# 3 === Customize ViewResolvers
howto-customize-view-resolvers=\
howto.spring-mvc.customize-view-resolvers

# 2 == Testing With Spring Security
howto-use-test-with-spring-security=\
howto.testing-with-spring-security

# 2 == Jersey
howto-jersey=\
howto.jersey

# 3 === Secure Jersey endpoints with Spring Security
howto-jersey-spring-security=\
howto.jersey.spring-security

# 3 === Use Jersey Alongside Another Web Framework
howto-jersey-alongside-another-web-framework=\
howto.jersey.alongside-another-web-framework

# 2 == HTTP Clients
howto-http-clients=\
howto.http-clients

# 3 === Configure RestTemplate to Use a Proxy
howto-http-clients-proxy-configuration=\
howto.http-clients.rest-template-proxy-configuration

# 3 === Configure the TcpClient used by a Reactor Netty-based WebClient
howto-webclient-reactor-netty-customization=\
howto.http-clients.webclient-reactor-netty-customization

# 2 == Logging
howto-logging=\
howto.logging

# 3 === Configure Logback for Logging
howto-configure-logback-for-logging=\
howto.logging.logback

# 4 ==== Configure Logback for File-only Output
howto-configure-logback-for-logging-fileonly=\
howto.logging.logback.file-only-output

# 3 === Configure Log4j for Logging
howto-configure-log4j-for-logging=\
howto.logging.log4j

# 4 ==== Use YAML or JSON to Configure Log4j 2
howto-configure-log4j-for-logging-yaml-or-json-config=\
howto.logging.log4j.yaml-or-json-config

# 2 == Data Access
howto-data-access=\
howto.data-access

# 3 === Configure a Custom DataSource
howto-configure-a-datasource=\
howto.data-access.configure-custom-datasource

# 3 === Configure Two DataSources
howto-two-datasources=\
howto.data-access.configure-two-datasources

# 3 === Use Spring Data Repositories
howto-use-spring-data-repositories=\
howto.data-access.spring-data-repositories

# 3 === Separate @Entity Definitions from Spring Configuration
howto-separate-entity-definitions-from-spring-configuration=\
howto.data-access.separate-entity-definitions-from-spring-configuration

# 3 === Configure JPA Properties
howto-configure-jpa-properties=\
howto.data-access.jpa-properties

# 3 === Configure Hibernate Naming Strategy
howto-configure-hibernate-naming-strategy=\
howto.data-access.configure-hibernate-naming-strategy

# 3 === Configure Hibernate Second-Level Caching
howto-configure-hibernate-second-level-caching=\
howto.data-access.configure-hibernate-second-level-caching

# 3 === Use Dependency Injection in Hibernate Components
howto-use-dependency-injection-hibernate-components=\
howto.data-access.dependency-injection-in-hibernate-components

# 3 === Use a Custom EntityManagerFactory
howto-use-custom-entity-manager=\
howto.data-access.use-custom-entity-manager

# 3 === Using Multiple EntityManagerFactories
howto-use-multiple-entity-managers=\
howto.data-access.use-multiple-entity-managers

howto-use-two-entity-managers=\
howto.data-access.use-multiple-entity-managers

# 3 === Use a Traditional persistence.xml File
howto-use-traditional-persistence-xml=\
howto.data-access.use-traditional-persistence-xml

# 3 === Use Spring Data JPA and Mongo Repositories
howto-use-spring-data-jpa--and-mongo-repositories=\
howto.data-access.use-spring-data-jpa-and-mongo-repositories

# 3 === Customize Spring Data's Web Support
howto-use-customize-spring-datas-web-support=\
howto.data-access.customize-spring-data-web-support

# 3 === Expose Spring Data Repositories as REST Endpoint
howto-use-exposing-spring-data-repositories-rest-endpoint=\
howto.data-access.exposing-spring-data-repositories-as-rest

# 3 === Configure a Component that is Used by JPA
howto-configure-a-component-that-is-used-by-JPA=\
howto.data-access.configure-a-component-that-is-used-by-jpa

# 3 === Configure jOOQ with Two DataSources
howto-configure-jOOQ-with-multiple-datasources=\
howto.data-access.configure-jooq-with-multiple-datasources

# 2 == Database Initialization
howto-database-initialization=\
howto.data-initialization

# 3 === Initialize a Database Using JPA
howto-initialize-a-database-using-jpa=\
howto.data-initialization.using-jpa

# 3 === Initialize a Database Using Hibernate
howto-initialize-a-database-using-hibernate=\
howto.data-initialization.using-hibernate

# 3 === Initialize a Database Using Basic SQL Scripts
howto-initialize-a-database-using-basic-scripts=\
howto.data-initialization.using-basic-sql-scripts

# 3 === Initialize a Spring Batch Database
howto-initialize-a-spring-batch-database=\
howto.data-initialization.batch

# 3 === Use a Higher-level Database Migration Tool
howto-use-a-higher-level-database-migration-tool=\
howto.data-initialization.migration-tool

# 4 ==== Execute Flyway Database Migrations on Startup
howto-execute-flyway-database-migrations-on-startup=\
howto.data-initialization.migration-tool.flyway

# 4 ==== Execute Liquibase Database Migrations on Startup
howto-execute-liquibase-database-migrations-on-startup=\
howto.data-initialization.migration-tool.liquibase

# 3 === Depend Upon an Initialized Database
howto-initialize-a-database-configuring-dependencies=\
howto.data-initialization.dependencies

# 4 ==== Detect a Database Initializer
howto-initialize-a-database-configuring-dependencies-initializer-detection=\
howto.data-initialization.dependencies.initializer-detection

# 4 ==== Detect a Bean That Depends On Database Initialization
howto-initialize-a-database-configuring-dependencies-depends-on-initialization-detection=\
howto.data-initialization.dependencies.depends-on-initialization-detection

# 2 == Messaging
howto-messaging=\
howto.messaging

# 3 === Disable Transacted JMS Session
howto-jms-disable-transaction=\
howto.messaging.disable-transacted-jms-session

# 2 == Batch Applications
howto-batch-applications=\
howto.batch

# 3 === Specifying a Batch Data Source
howto-spring-batch-specifying-a-data-source=\
howto.batch.specifying-a-data-source

# 3 === Running Spring Batch Jobs on Startup
howto-spring-batch-running-jobs-on-startup=\
howto.batch.running-jobs-on-startup

# 3 === Running from the Command Line
howto-spring-batch-running-command-line=\
howto.batch.?running-from-the-command-line

# 3 === Storing the Job Repository
howto-spring-batch-storing-job-repository=\
howto.batch.storing-job-repository

# 2 == Actuator
howto-actuator=\
howto.actuator

# 3 === Change the HTTP Port or Address of the Actuator Endpoints
howto-change-the-http-port-or-address-of-the-actuator-endpoints=\
howto.actuator.change-http-port-or-address

# 3 === Customize the '`whitelabel`' Error Page
howto-customize-the-whitelabel-error-page=\
howto.actuator.customize-whitelabel-error-page

# 3 === Sanitize Sensitive Values
howto-sanitize-sensitive-values=\
howto.actuator.sanitize-sensitive-values

howto-sanitize-sensible-values=\
howto.actuator.sanitize-sensitive-values

# 3 === Map Health Indicators to Micrometer Metrics
howto-map-health-indicators-to-metrics=\
howto.actuator.map-health-indicators-to-metrics

# 2 == Security
howto-security=\
howto.security

# 3 === Switch off the Spring Boot Security Configuration
howto-switch-off-spring-boot-security-configuration=\
howto.security.switch-off-spring-boot-configuration

# 3 === Change the UserDetailsService and Add User Accounts
howto-change-the-user-details-service-and-add-user-accounts=\
howto.security.change-user-details-service-and-add-user-accounts

# 3 === Enable HTTPS When Running behind a Proxy Server
howto-enable-https=\
howto.security.enable-https

# 2 == Hot Swapping
howto-hotswapping=\
howto.hotswapping

# 3 === Reload Static Content
howto-reload-static-content=\
howto.hotswapping.reload-static-content

# 3 === Reload Templates without Restarting the Container
howto-reload-thymeleaf-template-content=\
howto.hotswapping.reload-templates

# 4 ==== Thymeleaf Templates
howto-reload-thymeleaf-content=\
howto.hotswapping.reload-templates.thymeleaf

# 4 ==== FreeMarker Templates
howto-reload-freemarker-content=\
howto.hotswapping.reload-templates.freemarker

# 4 ==== Groovy Templates
howto-reload-groovy-template-content=\
howto.hotswapping.reload-templates.groovy

# 3 === Fast Application Restarts
howto-reload-fast-restart=\
howto.hotswapping.fast-application-restarts

# 3 === Reload Java Classes without Restarting the Container
howto-reload-java-classes-without-restarting=\
howto.hotswapping.reload-java-classes-without-restarting

# 2 == Build
howto-build=\
howto.build

# 3 === Generate Build Information
howto-build-info=\
howto.build.generate-info

# 3 === Generate Git Information
howto-git-info=\
howto.build.generate-git-info

# 3 === Customize Dependency Versions
howto-customize-dependency-versions=\
howto.build.customize-dependency-versions

# 3 === Create an Executable JAR with Maven
howto-create-an-executable-jar-with-maven=\
howto.build.create-an-executable-jar-with-maven

# 3 === Use a Spring Boot Application as a Dependency
howto-create-an-additional-executable-jar=\
howto.build.use-a-spring-boot-application-as-dependency

# 3 === Extract Specific Libraries When an Executable Jar Runs
howto-extract-specific-libraries-when-an-executable-jar-runs=\
howto.build.extract-specific-libraries-when-an-executable-jar-runs

# 3 === Create a Non-executable JAR with Exclusions
howto-create-a-nonexecutable-jar=\
howto.build.create-a-nonexecutable-jar

# 3 === Remote Debug a Spring Boot Application Started with Maven
howto-remote-debug-maven-run=\
howto.build.remote-debug-maven

# 3 === Build an Executable Archive from Ant without Using spring-boot-antlib
howto-build-an-executable-archive-with-ant=\
howto.build.build-an-executable-archive-with-ant-without-using-spring-boot-antlib

# 2 == Traditional Deployment
howto-traditional-deployment=\
howto.traditional-deployment

# 3 === Create a Deployable War File
howto-create-a-deployable-war-file=\
howto.traditional-deployment.war

# 3 === Convert an Existing Application to Spring Boot
howto-convert-an-existing-application-to-spring-boot=\
howto.traditional-deployment.convert-existing-application

# 3 ===  Deploying a WAR to WebLogic
howto-weblogic=\
howto.traditional-deployment.weblogic

# 2 == Use Jedis Instead of Lettuce
howto-use-jedis-instead-of-lettuce=\
howto.jedis-instead-of-lettuce

# 2 ==  Use Testcontainers for integration testing
howto-testcontainers=\
howto.testcontainers



# (appendix-application-properties.adoc)
# 1 = Common Application properties
common-application-properties=\
application-properties

# 2 == Core Properties [[core-properties]]
common-application-properties-core=\
application-properties.core

# 2 == Cache Properties [[cache-properties]]
common-application-properties-cache=\
application-properties.cache

# 2 == Mail Properties [[mail-properties]]
common-application-properties-mail=\
application-properties.mail

# 2 == JSON Properties [[json-properties]]
common-application-properties-json=\
application-properties.json

# 2 == Data Properties [[data-properties]]
common-application-properties-data=\
application-properties.data

# 2 == Transaction Properties [[transaction-properties]]
common-application-properties-transaction=\
application-properties.transaction

# 2 == Data Migration Properties [[data-migration-properties]]
common-application-properties-data-migration=\
application-properties.data-migration

# 2 == Integration Properties [[integration-properties]]
common-application-properties-integration=\
application-properties.integration

# 2 == Web Properties [[web-properties]]
common-application-properties-web=\
application-properties.web

# 2 == Templating Properties [[templating-properties]]
common-application-properties-templating=\
application-properties.templating

# 2 == Server Properties [[server-properties]]
common-application-properties-server=\
application-properties.server

# 2 == Security Properties [[security-properties]]
common-application-properties-security=\
application-properties.security

# 2 == RSocket Properties [[rsocket-properties]]
common-application-properties-rsocket=\
application-properties.rsocket

# 2 == Actuator Properties [[actuator-properties]]
common-application-properties-actuator=\
application-properties.actuator

# 2 == Devtools Properties [[devtools-properties]]
common-application-properties-devtools=\
application-properties.devtools

# 2 == Testing Properties [[testing-properties]]
common-application-properties-testing=\
application-properties.testing



# (configuration-metadata.adoc)
# 1 = Configuration Metadata
configuration-metadata=\
configuration-metadata

# 2 == Metadata Format
configuration-metadata-format=\
configuration-metadata.format

# 3 === Group Attributes
configuration-metadata-group-attributes=\
configuration-metadata.format.group

# 3 === Property Attributes
configuration-metadata-property-attributes=\
configuration-metadata.format.property

# 3 === Hint Attributes
configuration-metadata-hints-attributes=\
configuration-metadata.format.hints

# 3 === Repeated Metadata Items
configuration-metadata-repeated-items=\
configuration-metadata.format.repeated-items

# 2 == Providing Manual Hints
configuration-metadata-providing-manual-hints=\
configuration-metadata.manual-hints

# 3 === Value Hint
configuration-metadata-providing-manual-hints-value-hint=\
configuration-metadata.manual-hints.value-hint

# 3 === Value Providers
configuration-metadata-providing-manual-hints-value-providers=\
configuration-metadata.manual-hints.value-providers

# 4 ==== Any
configuration-metadata-providing-manual-hints-any=\
configuration-metadata.manual-hints.value-providers.any

# 4 ==== Class Reference
configuration-metadata-providing-manual-hints-class-reference=\
configuration-metadata.manual-hints.value-providers.class-reference

# 4 ==== Handle As
configuration-metadata-providing-manual-hints-handle-as=\
configuration-metadata.manual-hints.value-providers.handle-as

# 4 ==== Logger Name
configuration-metadata-providing-manual-hints-logger-name=\
configuration-metadata.manual-hints.value-providers.logger-name

# 4 ==== Spring Bean Reference
configuration-metadata-providing-manual-hints-spring-bean-reference=\
configuration-metadata.manual-hints.value-providers.spring-bean-reference

# 4 ==== Spring Profile Name
configuration-metadata-providing-manual-hints-spring-profile-name=\
configuration-metadata.manual-hints.value-providers.spring-profile-name

# 2 == Generating Your Own Metadata by Using the Annotation Processor
configuration-metadata-annotation-processor=\
configuration-metadata.annotation-processor

# 3 === Configuring the Annotation Processor
configuration-metadata-annotation-processor-setup=\
configuration-metadata.annotation-processor.configuring

# 3 === Automatic Metadata Generation
configuration-metadata-annotation-processor-metadata-generation=\
configuration-metadata.annotation-processor.automatic-metadata-generation

# 4 ==== Nested Properties
configuration-metadata-annotation-processor-metadata-generation-nested=\
configuration-metadata.annotation-processor.automatic-metadata-generation.nested-properties

# 3 === Adding Additional Metadata
configuration-metadata-additional-metadata=\
configuration-metadata.annotation-processor.adding-additional-metadata



# (auto-configuration-classes.adoc)
# 1 = Auto-configuration Classes
auto-configuration-classes=\
auto-configuration-classes

# 2 == spring-boot-autoconfigure
auto-configuration-classes-from-autoconfigure-module=\
auto-configuration-classes.core

# 2 == spring-boot-actuator-autoconfigure
auto-configuration-classes-from-actuator=\
auto-configuration-classes.actuator



# (test-auto-configuration.adoc)
# 1 = Test Auto-configuration Annotations
test-auto-configuration=\
test-auto-configuration

# 2 == Test Slices
test-auto-configuration-slices=\
test-auto-configuration.slices



# (executable-jar.adoc)
# 1 = The Executable Jar Format
executable-jar=\
executable-jar

# 2 == Nested JARs
executable-jar-nested-jars=\
executable-jar.nested-jars

# 3 === The Executable Jar File Structure
executable-jar-jar-file-structure=\
executable-jar.nested-jars.jar-structure

# 3 === The Executable War File Structure
executable-jar-war-file-structure=\
executable-jar.nested-jars.war-structure

# 3 === Index Files
executable-jar-war-index-files=\
executable-jar.nested-jars.index-files

# 3 === Classpath Index
executable-jar-war-index-files-classpath=\
executable-jar.nested-jars.classpath-index

# 3 === Layer Index
executable-jar-war-index-files-layers=\
executable-jar.nested-jars.layer-index

# 2 == Spring Boot's "`JarFile`" Class
executable-jar-jarfile=\
executable-jar.jarfile-class

# 3 === Compatibility with the Standard Java "`JarFile`"
executable-jar-jarfile-compatibility=\
executable-jar.jarfile-class.compatibilty

# 2 == Launching Executable Jars
executable-jar-launching=\
executable-jar.launching

# 3 === Launcher Manifest
executable-jar-launcher-manifest=\
executable-jar.launching.manifest

# 2 == PropertiesLauncher Features
executable-jar-property-launcher-features=\
executable-jar.property-launcher

# 2 == Executable Jar Restrictions
executable-jar-restrictions=\
executable-jar.restrictions

# 2 == Alternative Single Jar Solutions
executable-jar-alternatives=\
executable-jar.alternatives



# (dependency-versions.adoc)
# 1 = Dependency versions
dependency-versions=\
dependency-versions

# 2 == Managed Dependency Coordinates
dependency-versions-coordinates=\
dependency-versions.coordinates

# 2 == Version Properties
dependency-versions-properties=\
dependency-versions.properties

